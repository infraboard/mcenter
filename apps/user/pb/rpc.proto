syntax = "proto3";

package infraboard.mcenter.user;
option go_package = "github.com/infraboard/mcenter/apps/user";

import "mcube/pb/page/page.proto";
import "mcube/pb/request/request.proto";
import "mcenter/apps/user/pb/user.proto";

// Service 用户服务
service RPC {
	// 查询用户列表
	rpc QueryUser(QueryUserRequest) returns(UserSet);
    // 查询用户详情
    rpc DescribeUser(DescribeUserRequest) returns(User);
}

// QueryUserRequest 获取子账号列表
message QueryUserRequest {
    // 分页参数
    // @gotags: json:"page"
    infraboard.mcube.page.PageRequest page = 1;
    // 用户所属Domain
    // @gotags: json:"domain" validate:"required"
    string domain = 2;
    // 账号提供方
    // @gotags: json:"provider"
    optional PROVIDER provider = 3;
    // 用户类型
    // @gotags: json:"type"
    optional TYPE type = 4;
    // 通过Id
    // @gotags: json:"user_ids"
    repeated string user_ids = 5;
   // 根据标签过滤用户
    // @gotags: json:"labels"
    map<string,string> labels = 6;
    // 是否获取数据
    // @gotags: json:"skip_items"
    bool skip_items = 8;
    // 关键字查询
    // @gotags: json:"keywords"
    string keywords = 9;
}

// DescribeUserRequest 查询用户详情
message DescribeUserRequest {
    // 查询方式
    // @gotags: json:"describe_by"
    DESCRIBE_BY describe_by = 1;
    // 用户账号id
    // @gotags: json:"id"
    string id = 2;
    // 用户账号
    // @gotags: json:"username"
    string username = 3;
}

// UpdatePasswordRequest todo
message UpdatePasswordRequest {
    // 用户Id
    // @gotags: json:"user_id"
    string user_id = 1;
    // 旧密码
    // @gotags: json:"old_pass"
    string old_pass = 2;
    // 新密码
    // @gotags: json:"new_pass"
    string new_pass = 3;
    // 是否重置
    // @gotags: json:"is_reset"
    bool is_reset = 4;
    // 重置原因
    // @gotags: json:"reset_reason"
    string reset_reason = 5;
}

// 重置密码
message ResetPasswordRequest {
    // 用户名
    // @gotags: json:"user_id"
    string user_id = 1;
    // 新密码
    // @gotags: json:"new_pass"
    string new_pass = 3;
    // 是否重置
    // @gotags: json:"is_reset"
    bool is_reset = 4;
    // 重置原因
    // @gotags: json:"reset_reason"
    string reset_reason = 5;
}

message DeleteUserRequest {
    // 用户账号id
    // @gotags: json:"user_ids" validate:"required,lte=60"
    repeated string user_ids = 2;
}

// UpdateUserRequest todo
message UpdateUserRequest {
    // 更新模式
    // @gotags: json:"update_mode"
    infraboard.mcube.request.UpdateMode update_mode = 1;
    // 用户Id
    // @gotags: json:"user_id" validate:"required,lte=120"
    string user_id = 2;
    // profile 账号profile
    // @gotags: json:"profile"
	Profile profile = 3;
    // 用户描述
    // @gotags: json:"description"
    string description = 4;
    // 是否共享账号, 默认SSO, 不允许同一个账号给多少同时使用
    // @gotags: json:"shared" bson:"shared"
    bool shared = 13;
    // 用户标签
    // @gotags: json:"labels"
    map<string,string> labels = 7;
    // 飞书token
    // @gotags: bson:"feishu_token" json:"feishu_token"
    FeishuAccessToken feishu_token = 5;
    // 钉钉token
    // @gotags: bson:"dingding_token" json:"dingding_token"
    DingDingAccessToken dingding_token = 6;
    // 用户飞书相关信息
    // @gotags: json:"feishu" bson:"feishu"
    Feishu feishu = 8;
    // 用户钉钉相关信息
    // @gotags: json:"dingding" bson:"dingding"
    DingDing dingding = 9;
    // 用户企业微信相关信息
    // @gotags: json:"wechatwork" bson:"wechatwork"
    WechatWork wechatwork = 10;
    // 是否冻结
    // @gotags: bson:"locked" json:"locked"
    optional bool locked = 11;
    // 冻结原因
    // @gotags: bson:"locked_reson" json:"locked_reson"
    string locked_reson = 12;
}
