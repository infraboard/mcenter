syntax = "proto3";

package infraboard.mcenter.label;
option go_package = "github.com/infraboard/mcenter/apps/label";

import "mcube/pb/resource/meta.proto";
import "mcube/pb/resource/visiable.proto";

message LabelSet {
    // 总数量
    // @gotags: json:"total"
    int64 total = 1;
    // 列表
    // @gotags: json:"items"
    repeated Label items = 2;
}

message Label {
    // 元信息
    // @gotags: bson:",inline" json:"meta"
    mcube.resource.Meta meta = 1;
    // 空间定义
    // @gotags: bson:",inline" json:"spec"
    CreateLabelRequest spec = 2;
}

message CreateLabelRequest {
    // 标签的键, 标签的Key不允许修改
    // @gotags: json:"key" bson:"key" validate:"required"
    string key = 1;
    // 标签的键的描述
    // @gotags: json:"key_desc" bson:"key_desc" validate:"required"
    string key_desc = 16;
    // 标签的键
    // @gotags: json:"domain" bson:"domain"
    string domain = 2;
    // 标签的键
    // @gotags: json:"namespace" bson:"namespace"
    string namespace = 3;
    // 是不是必须标签, 如果是必须标签 资源创建时必须添加该标签
    // @gotags: json:"required" bson:"required"
    bool required = 4;
    // 什么条件下必选
    // @gotags: json:"required_condition" bson:"required_condition"
    RequiredCondition required_condition = 5;
    // 标签的颜色
    // @gotags: json:"color" bson:"color"
    string color = 6;
    // 值类型
    // @gotags: json:"value_type" bson:"value_type"
    VALUE_TYPE value_type = 8;
    // 标签默认值
    // @gotags: json:"default_value" bson:"default_value"
    string default_value = 9;
	// 值描述
	// @gotags: bson:"value_desc" json:"value_desc"
	string value_desc = 10;
	// 是否是多选
	// @gotags: bson:"multiple" json:"multiple"
	bool multiple = 17;
	// 枚举值的选项
	// @gotags: bson:"enum_options" json:"enum_options,omitempty"
	repeated EnumOption enum_options = 11;
	// 基于Http枚举的配置
	// @gotags: bson:"http_enum_config" json:"http_enum_config,omitempty"
	HttpEnumConfig http_enum_config = 12;
	// 值的样例
	// @gotags: bson:"example" json:"example"
	string example = 13;
    // 创建人
	// @gotags: bson:"create_by" json:"create_by"
	string create_by = 14;
    // 角色可见性
    // @gotags: bson:"visiable" json:"visiable"
    mcube.resource.VISIABLE visiable = 15;
	// 扩展属性
	// @gotags: bson:"extensions" json:"extensions"
	map<string, string> extensions = 25;
}

message RequiredCondition {
	// 针对特定资源的必选, 默认针对所有资源
	// @gotags: bson:"resources" json:"resources"
    repeated string resources = 1;
}

// 值类型
enum VALUE_TYPE {
	// 文本
	TEXT = 0;
	// 布尔值, 只能是ture或者false
	BOOLEAN = 1;
	// 枚举
	ENUM = 2;
	// 基于url的远程选项拉去, 仅存储URL地址, 前端自己处理
	HTTP_ENUM = 3;
}

message EnumOption {
	// 选项的说明
	// @gotags: bson:"label" json:"label"
	string label = 1;
	// 用户输入
	// @gotags: bson:"input" json:"input" validate:"required"
	string input = 2;
	// 选项的值, 根据parent.input + children.input 自动生成
	// @gotags: bson:"value" json:"value" 
	string value = 3;
    // 标签的颜色
    // @gotags: json:"color" bson:"color"
    string color = 7;
	// 是否废弃
	// @gotags: bson:"deprecate" json:"deprecate"
	bool deprecate = 4;
	// 废弃说明
	// @gotags: bson:"deprecate_desc" json:"deprecate_desc"
	string deprecate_desc = 5;
	// 枚举的子选项
	// @gotags: bson:"children" json:"children,omitempty"
	repeated EnumOption children = 6;
	// 扩展属性
	// @gotags: bson:"extensions" json:"extensions"
	map<string, string> extensions = 15;
}

message HttpEnumConfig {
	// 基于枚举的URL, 注意只支持Get方法
	// @gotags: bson:"url" json:"url"
	string url = 1;
	// Enum Label映射的字段名
	// @gotags: bson:"enum_label_name" json:"enum_label_name"
	string enum_label_name = 2;
	// Enum Value映射的字段名
	// @gotags: bson:"enum_label_value" json:"enum_label_value"
	string enum_label_value = 3;
}

